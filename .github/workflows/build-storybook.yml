name: build-storybook

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    types:
      - opened
      - closed
      - reopened
      - synchronize

jobs:
  build-storybook:
    runs-on: ubuntu-latest
    if: ${{ ! ( github.event_name == 'pull_request' && github.event.action == 'closed' ) }}
    steps:
    - uses: actions/checkout@v2
    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Composer Install
      uses: php-actions/composer@v1
      with:
        args: install
    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm
    - name: Setup Node.js (.nvmrc)
      uses: actions/setup-node@v1
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - name: Cache Node - npm
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-cache-
    - name: npm install
      run: |
        npm ci
    - name: Build Storybook
      run: |
        npm run build:storybook
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: storybook-files
        path: dist

  deploy-storybook:
    runs-on: ubuntu-latest
    needs: build-storybook
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: storybook-files
          path: dist
      - name: Set branch environment variables
        if: github.event_name != 'pull_request'
        run: |
          echo "::set-env name=TARGET_DIR::${GITHUB_REF##*/}"
      - name: Set PR environment variables
        if: github.event_name == 'pull_request'
        env:
          PULL_REQUEST_NUMBER: ${{ github.event.number }}
        run: |
          echo "::set-env name=TARGET_DIR::pull/${PULL_REQUEST_NUMBER}"
      - name: Commit updates
        run: |
          mkdir -p storybook/${TARGET_DIR}
          rm -rf storybook/${TARGET_DIR}
          mv dist storybook/${TARGET_DIR}
          git add .
          git status
          git diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0
          git commit -m "Deploy storybook for ${TARGET_DIR}."
          git pull --no-edit --quiet
          git push origin gh-pages
        env:
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}

  remove-storybook:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Remove storybook
        env:
          PULL_REQUEST_NUMBER: ${{ github.event.number }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}
        run: |
          git rm -rf storybook/pull/${PULL_REQUEST_NUMBER}
          git status
          git diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0
          git commit -m "Remove storybook for pull/${PULL_REQUEST_NUMBER}."
          git pull --no-edit --quiet
          git push origin gh-pages
